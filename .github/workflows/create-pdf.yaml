on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  release:
    types:
    - created

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.0.0
      with:
        versionSpec: '6.x'

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v3.0.0

    - name: Check version
      run: |
        if [ "${{ env.GITVERSION_NUGETVERSIONV2 }}" = "" ]; then
          echo "##[error]Failed to determine version"
          exit 1
        fi

    - name: prepare output directories and make scripts executable
      run: |
        mkdir -p output
        mkdir -p pages
        chmod +x scripts/*.sh

    - name: inject computed version
      run: |
        echo "##[section]Inject version number"
        version=${{ env.GITVERSION_NUGETVERSIONV2 }}
        echo ${{ env.GITVERSION_NUGETVERSIONV2 }}
        sed -i 's|##{VERSION}##|'"$version"'|g' src/main.md

    - name: inject date
      run: |
        echo "##[section]Inject date"
        date=$(date +%d/%m/%Y)
        sed -i 's|##{DATE}##|'"$date"'|g' src/main.md

    - name: Create PDF files
      run: |
        echo "##[section]Build Marp files to PDF"
        ./scripts/build-marp.sh src pdf
        mv src/main.pdf output/${OUTPUT_PDF_NAME_PREFIX}-${{ env.GITVERSION_NUGETVERSIONV2 }}.pdf
      env:
        OUTPUT_PDF_NAME_PREFIX: fp-slides

    - name: Upload PDF files
      uses: actions/upload-artifact@v4
      with:
        name: pdf
        path: output

    - name: Generate html version
      run: |
        echo "##[section]Build Marp files to html"
        ./scripts/build-marp.sh src html
        mv src/main.html pages/index.html
        cp -R src/img pages/img

    - name: Push documentation to dedicated branch
      # if: ${{ github.event_name == 'release' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: crazy-max/ghaction-github-pages@v4.0.0
      with:
        target_branch: gh-pages
        build_dir: ./pages
